[{"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\App.js":"2","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\store\\UserStore.js":"3","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\store\\DeviceStore.js":"4","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\NavBar.js":"5","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\http\\userAPI.js":"6","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\AppRouter.js":"7","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\http\\index.js":"8","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\routes.js":"9","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\utils\\consts.js":"10","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\DevicePage.js":"11","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\Auth.js":"12","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\Shop.js":"13","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\Basket.js":"14","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\Admin.js":"15","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\DeviceList.js":"16","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\http\\deviceAPI.js":"17","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\Pages.js":"18","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\BrandBar.js":"19","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\TypeBar.js":"20","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\modals\\CreateBrand.js":"21","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\modals\\CreateType.js":"22","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\modals\\CreateDevice.js":"23","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\DeviceItem.js":"24","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\index.js":"25","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\App.js":"26","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\store\\UserStore.js":"27","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\store\\DeviceStore.js":"28","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\NavBar.js":"29","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\AppRouter.js":"30","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\http\\userAPI.js":"31","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\http\\index.js":"32","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\routes.js":"33","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\utils\\consts.js":"34","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\DevicePage.js":"35","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\Auth.js":"36","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\Basket.js":"37","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\Shop.js":"38","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\Admin.js":"39","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\http\\deviceAPI.js":"40","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\Pages.js":"41","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\DeviceList.js":"42","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\BrandBar.js":"43","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\TypeBar.js":"44","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\modals\\CreateType.js":"45","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\modals\\CreateBrand.js":"46","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\modals\\CreateDevice.js":"47","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\DeviceItem.js":"48"},{"size":439,"mtime":1611985807000,"results":"49","hashOfConfig":"50"},{"size":860,"mtime":1611985807000,"results":"51","hashOfConfig":"50"},{"size":401,"mtime":1611985807000,"results":"52","hashOfConfig":"50"},{"size":1298,"mtime":1611985807000,"results":"53","hashOfConfig":"50"},{"size":1954,"mtime":1699699972112,"results":"54","hashOfConfig":"50"},{"size":695,"mtime":1611985807000,"results":"55","hashOfConfig":"50"},{"size":795,"mtime":1611985807000,"results":"56","hashOfConfig":"50"},{"size":407,"mtime":1611985807000,"results":"57","hashOfConfig":"50"},{"size":882,"mtime":1699650141633,"results":"58","hashOfConfig":"50"},{"size":228,"mtime":1611985807000,"results":"59","hashOfConfig":"50"},{"size":2163,"mtime":1699774054657,"results":"60","hashOfConfig":"50"},{"size":3134,"mtime":1699692013654,"results":"61","hashOfConfig":"50"},{"size":1539,"mtime":1699649700267,"results":"62","hashOfConfig":"50"},{"size":146,"mtime":1699649890448,"results":"63","hashOfConfig":"50"},{"size":1532,"mtime":1699619632797,"results":"64","hashOfConfig":"50"},{"size":491,"mtime":1611985807000,"results":"65","hashOfConfig":"50"},{"size":995,"mtime":1611985807000,"results":"66","hashOfConfig":"50"},{"size":801,"mtime":1611985807000,"results":"67","hashOfConfig":"50"},{"size":759,"mtime":1611985807000,"results":"68","hashOfConfig":"50"},{"size":752,"mtime":1611985807000,"results":"69","hashOfConfig":"50"},{"size":1368,"mtime":1699641062545,"results":"70","hashOfConfig":"50"},{"size":1343,"mtime":1699641062557,"results":"71","hashOfConfig":"50"},{"size":7229,"mtime":1699699438716,"results":"72","hashOfConfig":"50"},{"size":1029,"mtime":1699703098565,"results":"73","hashOfConfig":"50"},{"size":457,"mtime":1700934117625,"results":"74","hashOfConfig":"75"},{"size":893,"mtime":1700934117601,"results":"76","hashOfConfig":"75"},{"size":424,"mtime":1700934117638,"results":"77","hashOfConfig":"75"},{"size":1363,"mtime":1700934117637,"results":"78","hashOfConfig":"75"},{"size":2006,"mtime":1700934117612,"results":"79","hashOfConfig":"75"},{"size":820,"mtime":1700934117606,"results":"80","hashOfConfig":"75"},{"size":715,"mtime":1700934117624,"results":"81","hashOfConfig":"75"},{"size":428,"mtime":1700934117623,"results":"82","hashOfConfig":"75"},{"size":928,"mtime":1700934117635,"results":"83","hashOfConfig":"75"},{"size":234,"mtime":1700934117640,"results":"84","hashOfConfig":"75"},{"size":2219,"mtime":1700934117632,"results":"85","hashOfConfig":"75"},{"size":3216,"mtime":1700934117629,"results":"86","hashOfConfig":"75"},{"size":157,"mtime":1700934117630,"results":"87","hashOfConfig":"75"},{"size":1590,"mtime":1700934706005,"results":"88","hashOfConfig":"75"},{"size":1577,"mtime":1700934117628,"results":"89","hashOfConfig":"75"},{"size":1034,"mtime":1700934117621,"results":"90","hashOfConfig":"75"},{"size":831,"mtime":1700934117613,"results":"91","hashOfConfig":"75"},{"size":510,"mtime":1700934117611,"results":"92","hashOfConfig":"75"},{"size":785,"mtime":1700934117608,"results":"93","hashOfConfig":"75"},{"size":777,"mtime":1700934117615,"results":"94","hashOfConfig":"75"},{"size":1387,"mtime":1700934117620,"results":"95","hashOfConfig":"75"},{"size":1411,"mtime":1700934117617,"results":"96","hashOfConfig":"75"},{"size":7394,"mtime":1700934117618,"results":"97","hashOfConfig":"75"},{"size":1056,"mtime":1700934117609,"results":"98","hashOfConfig":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"pnajwy",{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"101"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"101"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1ug0d6i",{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"158"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"158"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"158"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"158"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"158"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"158"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"158"},"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\index.js",[],["213","214"],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\App.js",["215"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\store\\UserStore.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\NavBar.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\http\\userAPI.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\http\\index.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\routes.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\utils\\consts.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\DevicePage.js",["216","217"],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\Auth.js",["218"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизація' : \"Регєстрація\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введіть ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введіть ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Немаэ акаунту? <NavLink to={REGISTRATION_ROUTE}>Зареєструватися</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Є акаунт? <NavLink to={LOGIN_ROUTE}>Увійти</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Увійти' : 'Регістрація'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\Shop.js",["219","220"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\Basket.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\pages\\Admin.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\http\\deviceAPI.js",["221"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\Pages.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\TypeBar.js",["222"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\modals\\CreateBrand.js",["223"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Додати бренд\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введіть назву бренду\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Зачинити</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Додати</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\modals\\CreateDevice.js",["224","225"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col, ModalTitle} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(1)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n    const [description, setDescription] = useState('');\n    const [contact, setContact] = useState('');\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('description', description);\n        formData.append('contact', contact);\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Додати девайс\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Оберіть тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <ModalTitle>Введіть назву моделі девайсу</ModalTitle>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n\n                    />\n                    <ModalTitle>Введіть ціну девайсу</ModalTitle>\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"\"\n                        type=\"number\"\n                    />\n                    <ModalTitle>Введіть стан девайсу</ModalTitle>\n                    <Form.Control\n                        value={description}\n                        onChange={e => setDescription(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введіть опис стану девайсу\"\n                    />\n                    <ModalTitle>Введіть контактні дані (email/telegram) для зв'язку</ModalTitle>\n                    <Form.Control\n                        value={contact}\n                        onChange={e => setContact(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введіть нік в телеграм або email\"\n                    />\n                    <ModalTitle>Завантажте фото вашого девайсу</ModalTitle>\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Додати нову ознаку\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введіть назву ознаки\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введіть опис ознаки\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Видалити\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Зачинити</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Додати</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","C:\\Users\\admin\\Desktop\\web politech\\course-work\\client\\src\\components\\DeviceItem.js",["226"],"import React from 'react';\nimport {Card, Col} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport star from '../assets/star.png'\nimport {useHistory} from \"react-router-dom\"\nimport {DEVICE_ROUTE} from \"../utils/consts\";\n\nconst DeviceItem = ({device}) => {\n    const history = useHistory()\n    return (\n        <Col md={3} className={\"mt-3\"} onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\n                <Image width={150} height={150} src={process.env.REACT_APP_API_URL + device.img}/>\n                <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\n                    <div>Samsung...</div>\n                    <div className=\"d-flex align-items-center\">\n                        <div>{device.price}грн</div>\n\n                    </div>\n                </div>\n                <div>{device.name}</div>\n            </Card>\n        </Col>\n    );\n};\n\nexport default DeviceItem;\n","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\index.js",[],["227","228"],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\App.js",["229"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"./index\";\r\nimport {check} from \"./http/userAPI\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nconst App = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        check().then(data => {\r\n            user.setUser(true)\r\n            user.setIsAuth(true)\r\n        }).finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <Spinner animation={\"grow\"}/>\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <NavBar />\r\n            <AppRouter />\r\n        </BrowserRouter>\r\n    );\r\n});\r\n\r\nexport default App;\r\n","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\store\\UserStore.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\NavBar.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\http\\userAPI.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\http\\index.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\routes.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\utils\\consts.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\DevicePage.js",["230","231"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from 'react-router-dom'\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{device.name}</h2>\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:500, height: 280, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {device.price}\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                        style={{width: 350, height: 300, fontSize: 32, border: '5px solid lightgray', marginLeft:150}}\r\n                    >\r\n                        Тут могла б бути ваша реклама\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n\r\n\r\n\r\n                <h1>Характеристики</h1>\r\n                {device.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePage;\r\n","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\Auth.js",["232"],"import React, {useContext, useState} from 'react';\r\nimport {Container, Form} from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n            } else {\r\n                data = await registration(email, password);\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(SHOP_ROUTE)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизація' : \"Регєстрація\"}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введіть ваш email...\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введіть ваш пароль...\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\r\n                        {isLogin ?\r\n                            <div>\r\n                                Немаэ акаунту? <NavLink to={REGISTRATION_ROUTE}>Зареєструватися</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Є акаунт? <NavLink to={LOGIN_ROUTE}>Увійти</NavLink>\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                            variant={\"outline-success\"}\r\n                            onClick={click}\r\n                        >\r\n                            {isLogin ? 'Увійти' : 'Регістрація'}\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;\r\n","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\Basket.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\Shop.js",["233","234"],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\pages\\Admin.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\http\\deviceAPI.js",["235"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $authHost.post('api/device', device)\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeId, brandId, page, limit\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}\r\n","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\Pages.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\TypeBar.js",["236"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    return (\r\n        <ListGroup>\r\n            {device.types.map(type =>\r\n                <ListGroup.Item\r\n                    style={{cursor: 'pointer'}}\r\n                    active={type.id === device.selectedType.id}\r\n                    onClick={() => device.setSelectedType(type)}\r\n                    key={type.id}\r\n                >\r\n                    {type.name}\r\n                </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default TypeBar;\r\n","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\modals\\CreateBrand.js",["237"],"import React, {useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {createBrand, createType} from \"../../http/deviceAPI\";\r\n\r\nconst CreateBrand = ({show, onHide}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const addBrand = () => {\r\n        createBrand({name: value}).then(data => {\r\n            setValue('')\r\n            onHide()\r\n        })\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Додати бренд\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        placeholder={\"Введіть назву бренду\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Зачинити</Button>\r\n                <Button variant=\"outline-success\" onClick={addBrand}>Додати</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateBrand;\r\n","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\modals\\CreateDevice.js",["238","239"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col, ModalTitle} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(1)\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n    const [description, setDescription] = useState('');\r\n    const [contact, setContact] = useState('');\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('brandId', device.selectedBrand.id)\r\n        formData.append('typeId', device.selectedType.id)\r\n        formData.append('description', description);\r\n        formData.append('contact', contact);\r\n        formData.append('info', JSON.stringify(info))\r\n        createDevice(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Додати девайс\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"Оберіть тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <ModalTitle>Введіть назву моделі девайсу</ModalTitle>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n\r\n                    />\r\n                    <ModalTitle>Введіть ціну девайсу</ModalTitle>\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"\"\r\n                        type=\"number\"\r\n                    />\r\n                    <ModalTitle>Введіть стан девайсу</ModalTitle>\r\n                    <Form.Control\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введіть опис стану девайсу\"\r\n                    />\r\n                    <ModalTitle>Введіть контактні дані (email/telegram) для зв'язку</ModalTitle>\r\n                    <Form.Control\r\n                        value={contact}\r\n                        onChange={e => setContact(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введіть нік в телеграм або email\"\r\n                    />\r\n                    <ModalTitle>Завантажте фото вашого девайсу</ModalTitle>\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-dark\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Додати нову ознаку\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введіть назву ознаки\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Введіть опис ознаки\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Видалити\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Зачинити</Button>\r\n                <Button variant=\"outline-success\" onClick={addDevice}>Додати</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;\r\n","C:\\Users\\admin\\Desktop\\course-work\\client\\src\\components\\DeviceItem.js",["240"],"import React from 'react';\r\nimport {Card, Col} from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport star from '../assets/star.png'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {DEVICE_ROUTE} from \"../utils/consts\";\r\n\r\nconst DeviceItem = ({device}) => {\r\n    const history = useHistory()\r\n    return (\r\n        <Col md={3} className={\"mt-3\"} onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\r\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\r\n                <Image width={150} height={150} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\r\n                    <div>Samsung...</div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div>{device.price}грн</div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div>{device.name}</div>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default DeviceItem;\r\n",{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":19,"column":8,"nodeType":"247","endLine":19,"endColumn":10,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":2,"column":9,"nodeType":"251","messageId":"252","endLine":2,"endColumn":15},{"ruleId":"245","severity":1,"message":"253","line":12,"column":8,"nodeType":"247","endLine":12,"endColumn":10,"suggestions":"254"},{"ruleId":"249","severity":1,"message":"255","line":26,"column":17,"nodeType":"251","messageId":"252","endLine":26,"endColumn":21},{"ruleId":"245","severity":1,"message":"256","line":24,"column":8,"nodeType":"247","endLine":24,"endColumn":10,"suggestions":"257"},{"ruleId":"245","severity":1,"message":"256","line":31,"column":8,"nodeType":"247","endLine":31,"endColumn":65,"suggestions":"258"},{"ruleId":"249","severity":1,"message":"259","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":18},{"ruleId":"249","severity":1,"message":"260","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":11},{"ruleId":"249","severity":1,"message":"261","line":4,"column":22,"nodeType":"251","messageId":"252","endLine":4,"endColumn":32},{"ruleId":"249","severity":1,"message":"262","line":5,"column":36,"nodeType":"251","messageId":"252","endLine":5,"endColumn":48},{"ruleId":"245","severity":1,"message":"256","line":19,"column":8,"nodeType":"247","endLine":19,"endColumn":10,"suggestions":"263"},{"ruleId":"249","severity":1,"message":"264","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":12},{"ruleId":"241","replacedBy":"265"},{"ruleId":"243","replacedBy":"266"},{"ruleId":"245","severity":1,"message":"246","line":19,"column":8,"nodeType":"247","endLine":19,"endColumn":10,"suggestions":"267"},{"ruleId":"249","severity":1,"message":"250","line":2,"column":9,"nodeType":"251","messageId":"252","endLine":2,"endColumn":15},{"ruleId":"245","severity":1,"message":"253","line":12,"column":8,"nodeType":"247","endLine":12,"endColumn":10,"suggestions":"268"},{"ruleId":"249","severity":1,"message":"255","line":26,"column":17,"nodeType":"251","messageId":"252","endLine":26,"endColumn":21},{"ruleId":"245","severity":1,"message":"256","line":24,"column":8,"nodeType":"247","endLine":24,"endColumn":10,"suggestions":"269"},{"ruleId":"245","severity":1,"message":"256","line":31,"column":8,"nodeType":"247","endLine":31,"endColumn":65,"suggestions":"270"},{"ruleId":"249","severity":1,"message":"259","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":18},{"ruleId":"249","severity":1,"message":"260","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":11},{"ruleId":"249","severity":1,"message":"261","line":4,"column":22,"nodeType":"251","messageId":"252","endLine":4,"endColumn":32},{"ruleId":"249","severity":1,"message":"262","line":5,"column":36,"nodeType":"251","messageId":"252","endLine":5,"endColumn":48},{"ruleId":"245","severity":1,"message":"256","line":19,"column":8,"nodeType":"247","endLine":19,"endColumn":10,"suggestions":"271"},{"ruleId":"249","severity":1,"message":"264","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":12},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["274"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["275"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["276"],["277"],"'jwt_decode' is defined but never used.","'Col' is defined but never used.","'createType' is defined but never used.","'fetchDevices' is defined but never used.",["278"],"'star' is defined but never used.",["272"],["273"],["279"],["280"],["281"],["282"],["283"],"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"288","fix":"292"},{"desc":"284","fix":"293"},{"desc":"286","fix":"294"},{"desc":"288","fix":"295"},{"desc":"290","fix":"296"},{"desc":"288","fix":"297"},"Update the dependencies array to be: [user]",{"range":"298","text":"299"},"Update the dependencies array to be: [id]",{"range":"300","text":"301"},"Update the dependencies array to be: [device]",{"range":"302","text":"303"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"304","text":"305"},{"range":"306","text":"303"},{"range":"307","text":"299"},{"range":"308","text":"301"},{"range":"309","text":"303"},{"range":"310","text":"305"},{"range":"311","text":"303"},[641,643],"[user]",[457,459],"[id]",[880,882],"[device]",[1112,1169],"[device.page, device.selectedType, device.selectedBrand, device]",[862,864],[659,661],[468,470],[900,902],[1140,1197],[880,882]]